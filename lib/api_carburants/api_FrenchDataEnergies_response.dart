class Autogenerated {
  int? nhits;
  Parameters? parameters;
  List<Records>? records;
  List<FacetGroups>? facetGroups;

  Autogenerated({this.nhits, this.parameters, this.records, this.facetGroups});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    nhits = json['nhits'];
    parameters = json['parameters'] != null
        ? new Parameters.fromJson(json['parameters'])
        : null;
    if (json['records'] != null) {
      records = <Records>[];
      json['records'].forEach((v) {
        records!.add(new Records.fromJson(v));
      });
    }
    if (json['facet_groups'] != null) {
      facetGroups = <FacetGroups>[];
      json['facet_groups'].forEach((v) {
        facetGroups!.add(new FacetGroups.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['nhits'] = this.nhits;
    if (this.parameters != null) {
      data['parameters'] = this.parameters!.toJson();
    }
    if (this.records != null) {
      data['records'] = this.records!.map((v) => v.toJson()).toList();
    }
    if (this.facetGroups != null) {
      data['facet_groups'] = this.facetGroups!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Parameters {
  String? dataset;
  int? rows;
  int? start;
  List<String>? facet;
  String? format;
  List<String>? geofilterDistance;
  String? timezone;

  Parameters(
      {this.dataset,
        this.rows,
        this.start,
        this.facet,
        this.format,
        this.geofilterDistance,
        this.timezone});

  Parameters.fromJson(Map<String, dynamic> json) {
    dataset = json['dataset'];
    rows = json['rows'];
    start = json['start'];
    facet = json['facet'].cast<String>();
    format = json['format'];
    geofilterDistance = json['geofilter.distance'].cast<String>();
    timezone = json['timezone'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['dataset'] = this.dataset;
    data['rows'] = this.rows;
    data['start'] = this.start;
    data['facet'] = this.facet;
    data['format'] = this.format;
    data['geofilter.distance'] = this.geofilterDistance;
    data['timezone'] = this.timezone;
    return data;
  }
}

class Records {
  String? datasetid;
  String? recordid;
  Fields? fields;
  Geometry? geometry;
  String? recordTimestamp;

  Records(
      {this.datasetid,
        this.recordid,
        this.fields,
        this.geometry,
        this.recordTimestamp});

  Records.fromJson(Map<String, dynamic> json) {
    datasetid = json['datasetid'];
    recordid = json['recordid'];
    fields =
    json['fields'] != null ? new Fields.fromJson(json['fields']) : null;
    geometry = json['geometry'] != null
        ? new Geometry.fromJson(json['geometry'])
        : null;
    recordTimestamp = json['record_timestamp'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['datasetid'] = this.datasetid;
    data['recordid'] = this.recordid;
    if (this.fields != null) {
      data['fields'] = this.fields!.toJson();
    }
    if (this.geometry != null) {
      data['geometry'] = this.geometry!.toJson();
    }
    data['record_timestamp'] = this.recordTimestamp;
    return data;
  }
}

class Fields {
  String? region;
  String? gazoleMaj;
  int? id;
  String? horaires;
  String? gazolePrix;
  String? pop;
  String? horairesAutomate2424;
  String? e10Maj;
  String? cp;
  String? prix;
  String? ville;
  String? codeRegion;
  String? codeDepartement;
  String? latitude;
  String? departement;
  String? carburantsIndisponibles;
  List<double>? geom;
  String? sp98Maj;
  String? sp98Prix;
  String? e85Prix;
  String? e10Prix;
  String? e85Maj;
  String? carburantsDisponibles;
  String? adresse;
  double? longitude;
  String? dist;
  String? services;
  String? servicesService;
  String? gplcPrix;
  String? gplcMaj;
  String? sp95Maj;
  String? sp95Prix;

  Fields(
      {this.region,
        this.gazoleMaj,
        this.id,
        this.horaires,
        this.gazolePrix,
        this.pop,
        this.horairesAutomate2424,
        this.e10Maj,
        this.cp,
        this.prix,
        this.ville,
        this.codeRegion,
        this.codeDepartement,
        this.latitude,
        this.departement,
        this.carburantsIndisponibles,
        this.geom,
        this.sp98Maj,
        this.sp98Prix,
        this.e85Prix,
        this.e10Prix,
        this.e85Maj,
        this.carburantsDisponibles,
        this.adresse,
        this.longitude,
        this.dist,
        this.services,
        this.servicesService,
        this.gplcPrix,
        this.gplcMaj,
        this.sp95Maj,
        this.sp95Prix});

  Fields.fromJson(Map<String, dynamic> json) {
    region = json['region'];
    gazoleMaj = json['gazole_maj'];
    id = json['id'];
    horaires = json['horaires'];
    gazolePrix = json['gazole_prix'];
    pop = json['pop'];
    horairesAutomate2424 = json['horaires_automate_24_24'];
    e10Maj = json['e10_maj'];
    cp = json['cp'];
    prix = json['prix'];
    ville = json['ville'];
    codeRegion = json['code_region'];
    codeDepartement = json['code_departement'];
    latitude = json['latitude'];
    departement = json['departement'];
    carburantsIndisponibles = json['carburants_indisponibles'];
    geom = json['geom'].cast<double>();
    sp98Maj = json['sp98_maj'];
    sp98Prix = json['sp98_prix'];
    e85Prix = json['e85_prix'];
    e10Prix = json['e10_prix'];
    e85Maj = json['e85_maj'];
    carburantsDisponibles = json['carburants_disponibles'];
    adresse = json['adresse'];
    longitude = json['longitude'];
    dist = json['dist'];
    services = json['services'];
    servicesService = json['services_service'];
    gplcPrix = json['gplc_prix'];
    gplcMaj = json['gplc_maj'];
    sp95Maj = json['sp95_maj'];
    sp95Prix = json['sp95_prix'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['region'] = this.region;
    data['gazole_maj'] = this.gazoleMaj;
    data['id'] = this.id;
    data['horaires'] = this.horaires;
    data['gazole_prix'] = this.gazolePrix;
    data['pop'] = this.pop;
    data['horaires_automate_24_24'] = this.horairesAutomate2424;
    data['e10_maj'] = this.e10Maj;
    data['cp'] = this.cp;
    data['prix'] = this.prix;
    data['ville'] = this.ville;
    data['code_region'] = this.codeRegion;
    data['code_departement'] = this.codeDepartement;
    data['latitude'] = this.latitude;
    data['departement'] = this.departement;
    data['carburants_indisponibles'] = this.carburantsIndisponibles;
    data['geom'] = this.geom;
    data['sp98_maj'] = this.sp98Maj;
    data['sp98_prix'] = this.sp98Prix;
    data['e85_prix'] = this.e85Prix;
    data['e10_prix'] = this.e10Prix;
    data['e85_maj'] = this.e85Maj;
    data['carburants_disponibles'] = this.carburantsDisponibles;
    data['adresse'] = this.adresse;
    data['longitude'] = this.longitude;
    data['dist'] = this.dist;
    data['services'] = this.services;
    data['services_service'] = this.servicesService;
    data['gplc_prix'] = this.gplcPrix;
    data['gplc_maj'] = this.gplcMaj;
    data['sp95_maj'] = this.sp95Maj;
    data['sp95_prix'] = this.sp95Prix;
    return data;
  }
}

class Geometry {
  String? type;
  List<double>? coordinates;

  Geometry({this.type, this.coordinates});

  Geometry.fromJson(Map<String, dynamic> json) {
    type = json['type'];
    coordinates = json['coordinates'].cast<double>();
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['type'] = this.type;
    data['coordinates'] = this.coordinates;
    return data;
  }
}

class FacetGroups {
  String? name;
  List<Facets>? facets;

  FacetGroups({this.name, this.facets});

  FacetGroups.fromJson(Map<String, dynamic> json) {
    name = json['name'];
    if (json['facets'] != null) {
      facets = <Facets>[];
      json['facets'].forEach((v) {
        facets!.add(new Facets.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['name'] = this.name;
    if (this.facets != null) {
      data['facets'] = this.facets!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Facets {
  String? name;
  int? count;
  String? state;
  String? path;

  Facets({this.name, this.count, this.state, this.path});

  Facets.fromJson(Map<String, dynamic> json) {
    name = json['name'];
    count = json['count'];
    state = json['state'];
    path = json['path'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['name'] = this.name;
    data['count'] = this.count;
    data['state'] = this.state;
    data['path'] = this.path;
    return data;
  }
}